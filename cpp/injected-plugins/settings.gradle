plugins {
    id 'dev.nokee.sample'
}

import org.gradle.samples.plugins.generators.GitRepoTask
sample {
    copySource {
        def cppUtilsLib = CppLibraryTemplate.of("cpp-lib-with-api-dep", "utilities")
        def cppListLib = CppLibraryTemplate.of("cpp-lib", "list")
        def cppMessageLib = CppLibraryTemplate.of("cpp-message-api", "message")

        appProject(".").buildRoot()
        appProject(".").fromTemplate("cpp-app")
        appProject(".").fromTemplate(cppMessageLib)
        appProject(".").fromTemplate("cpp-message-static")
        libProject("repos/utilities-library").fromTemplate(cppUtilsLib)
        libProject("repos/list-library").fromTemplate(cppListLib)
    }

    gradle.rootProject {
        task generateMinimalCppListRepo(type: GitRepoTask) {
            dependsOn generateSource
            sampleDir = file("list-library")
            change { ch ->
                tag("1.0")
                message("initial version")
            }
        }

        task generateMinimalCppUtilitiesRepo(type: GitRepoTask) {
            dependsOn generateSource
            sampleDir = file("repos/utilities-library")
            change { ch ->
                tag("1.0")
                message("initial version")
            }
        }
    }
}

rootProject.name = 'app'

includeBuild('plugins') {
    name = 'source-plugins'
}

sourceControl {
    gitRepository("repos/utilities-library") {
        producesModule("org.gradle.cpp-samples:utilities")
        plugins {
            id "utilities-build"
        }
    }
    gitRepository("repos/list-library") {
        producesModule("org.gradle.cpp-samples:list")
        plugins {
            id "list-build"
        }
    }
}
