// This root project is simply a container of sample builds
//plugins {
//    id("org.gradle.samples.wrapper")
//}
//

tasks.register('prepareSimpleLib') {
    dependsOn(externalBuilds.named('cpp-simple-library').with { [task(':assembleRelease'), task(':assembleDebug')] })
    if (!System.getProperty('os.name').toLowerCase().contains('win')) {
        dependsOn(externalBuilds.named('swift-simple-library').with { [task(':assembleRelease'), task(':assembleDebug')] })
    }
}

tasks.named('generateSource') { mustRunAfter 'prepareSimpleLib' }
tasks.named('generateRepos') { mustRunAfter 'prepareSimpleLib' }

tasks.register('prepare') {
    dependsOn('prepareSimpleLib')
    dependsOn {
        def deps = files(samples.toProvider().get().findAll { !(System.getProperty("os.name").toLowerCase().contains("win") && it.name.startsWith('swift-')) }.collect {
            externalBuilds.named(it.name).with { [task(':generateSource'), task(':generateRepos')] }
        }).buildDependencies
        return deps.getDependencies(null).collect { it.mustRunAfter('prepareSimpleLib') }
    }
}